#O que importa aqui, não são os valores, mas sim a função
round(predict(fit, data.frame(x)),2)
################
# Definir os dados de entrada
x <- c(1,2,5)
y <- c(0,4,11)
gold <- (1+sqrt(5))/2
gold
model_function <- function(a, x) {
gold * 10 * (1 - exp(-a * (x-1)))
}
# Ajustar o modelo usando a função nls
fit <- nls(y ~ model_function(a,  x),
start = list(a = 0.8))
# Imprima os parâmetros ótimos
coef(fit)
# Gerar previsões para 100 valores de x entre 1 e 10
x_pred <- data.frame(x = seq(from = 1, to = 15, length.out = 200))
y_pred <- predict(fit, x_pred)
# Plot dos dados reais e dos valores previstos
par(mar=c(2.5,2.5,0.5,0.5), mgp=c(1.5,0.5,0))
plot(x, y, col = "blue", pch = 20, cex = 1.5,
xlim = c(0,15),ylim = c(0,17),
xlab = 'Talentos iniciais',
ylab = 'Talentos finais')
lines(x_pred$x, y_pred, col = "black",lwd=2)
abline(h=16,lty=2,lwd=2,col='blue')
abline(h=8,lty=2,lwd=2,col='green')
abline(v=log(2)/coef(fit) + 1,lty=2,lwd=2,col='green')
# livro do Pinheiro pg 511 (half-life t0.5)
coef(fit)
log(2)/(coef(fit))
# predizendo o valor de talentos para a meia vida
predict(fit, data.frame(x=c(2.436051 + 1)))
# quanto maior x, mais a predição se aproxima da assintota
# x=50, y=15.99999
predict(fit, data.frame(x=c(50)))
#O que importa aqui, não são os valores, mas sim a função
round(predict(fit, data.frame(x)),2)
#O que importa aqui, não são os valores, mas sim a função
round(predict(fit, data.frame(x)),4)
